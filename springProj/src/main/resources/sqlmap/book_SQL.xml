<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="book">
   <!-- MyBatis에서 제공해주는 데이터 입력을 나타내는 태그
   1) 드루와 : Dao 객체가 던진 데이터타입.parameterType만 씀
   2) 가즈아 : Dao 객체의 메소드 쪽으로 리턴할 타입.
     - resultType : vo, hashMap, String, int
     - resultMap  : MyBatis의 resultMap 태그를 사용
   -->
   <!-- bookVO(전)=>{"bookId":0,"title":"총알탄 개똥이","category":"소설","price":10000,"insertDate":""} -->
   <!-- bookVO(후)=>{"bookId":1,"title":"총알탄 개똥이","category":"소설","price":10000,"insertDate":""} -->
   <!-- 마이바티스 쿼리 XML에 전달되면 샵{title}을 "총알탄 개똥이"로 자동 변환함 -->
   <insert id="createPost" parameterType="bookVO">
   <!-- 니키? 내키? 아니! 우리키!! -->
   <!-- 키를 높이면 락(rok)커가 될 수 있을까? 
   order : BEFORE(쿼리를 실행하기 전에 먼저 selectKey를 실행)
   resultType : selectKey 쿼리를 실행 한 결과 타입
   keyProperty : bookVO의 멤버변수(결과를 담을)
   -->
   
   <!-- insert문을 실행하기 전에 실행됨 -->
   <selectKey resultType="int" order="BEFORE" keyProperty="bookId">
      SELECT NVL(MAX(BOOK_ID),0)+1 FROM BOOK
   </selectKey>
   
      insert into book(BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE)
      values(#{bookId}, #{title}, #{category}, #{price}, SYSDATE)
   </insert>
   <!-- 도서목록 
   	  where 1 = 1은 늘 참임. 
  	   조건이 2개 이상일 때 WHERE + AND
   	   조건이 1개일 때 WHERE이어야 함. 
      WHERE(생략) 
      AND   => 오류 발생
      ==>
      WHERE 1 = 1
      AND(생략)
      AND => 정상
      
      True and True  = True
      True and False = False
      
      keyword : null(/list)
      keyword : ""  (/list?keyword=)
    -->
   <!-- hashMap => map 클래스 -->
   <select id="list" parameterType="hashMap" resultType="bookVO">
		SELECT
	    book_id,
	    title,
	    category,
	    price,
	    insert_date
	FROM
	    book
	 WHERE 1=1
	 <if test ="keyword!=null and keyword!=''" >
	and (title    like '%'||#{keyword}||'%'
	  or category like '%'||#{keyword}||'%'
	  or price    like '%'||#{keyword}||'%' )
	</if>
	order by book_id desc
	</select>
	<!-- parameterMap 사용암함!! 
	resultMap은 JOIN 도는 CLOB 자료형에서 주로 사용함
	-->
	<select id="detail" parameterType="bookVO" resultType="bookVO">
	SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE
	FROM BOOK
	WHERE BOOK_ID = #{bookId}
	</select>
	<update id="updatePost" parameterType="bookVO">
	UPDATE book
	SET 
	TITLE=#{title}
	, CATEGORY=#{category}
	, PRICE=#{price}
	WHERE
   book_id = #{bookId}
	</update>
	<delete id="deletePost" parameterType="bookVO">
		delete from book 
		where book_id = #{bookId}
	</delete>
</mapper>